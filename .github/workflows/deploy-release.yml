name: Deploy & Release

on:
  push:
    branches: 
      - main

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages and creation of a release
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{steps.deployment.outputs.page_url}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
      - name: Install dependencies
        run: yarn
      - name: Run Parcel 
        run: yarn build --no-source-maps
      - name: How big is the dist folder?
        run: du -sh dist
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'dist'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      - name: Zip dist folder
        run: zip -r scrap.zip dist
      - name: Get package version
        id: package
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "tag=v$VERSION" >> "$GITHUB_OUTPUT"
          echo "name=Scrap v$VERSION" >> "$GITHUB_OUTPUT"
      - name: Create release notes from changelog
        uses: CSchoel/release-notes-from-changelog@v1.3.0
        with:
          version: ${{steps.package.outputs.version}}
      - name: Release
        run: gh release create "${{steps.package.outputs.tag}}" scrap.zip --title "${{steps.package.outputs.name}}" --notes-file RELEASE.md
        env:
          GH_TOKEN: ${{github.token}}       